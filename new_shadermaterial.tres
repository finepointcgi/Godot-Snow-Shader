[gd_resource type="ShaderMaterial" load_steps=45 format=2]

[ext_resource path="res://Textures/Snow/Snow003_2K_NormalDX.jpg" type="Texture" id=1]
[ext_resource path="res://Textures/Snow/Snow003_2K_Color.jpg" type="Texture" id=2]
[ext_resource path="res://Textures/Rock/Rock030_1K_NormalGL.jpg" type="Texture" id=3]
[ext_resource path="res://Textures/Rock/Rock030_1K_Color.jpg" type="Texture" id=4]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )
texture_type = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=4]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.0, 2, -1.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "Brightness_Of_Normal"

[sub_resource type="VisualShaderNodeScalarInterp" id=6]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5, 2, -1.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "Contrast_Of_Normal"

[sub_resource type="VisualShaderNodeScalarOp" id=8]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=9]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 1

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "camera"

[sub_resource type="VisualShaderNodeVectorCompose" id=12]

[sub_resource type="VisualShaderNodeDotProduct" id=13]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarOp" id=14]
default_input_values = [ 0, 0.0, 1, 0.007 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarClamp" id=15]

[sub_resource type="OpenSimplexNoise" id=16]

[sub_resource type="NoiseTexture" id=17]
width = 2048
height = 2048
seamless = true
noise = SubResource( 16 )

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = SubResource( 17 )

[sub_resource type="VisualShaderNodeScalarInterp" id=19]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.0, 2, -1.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=20]
uniform_name = "Brightness_Of_Noise"

[sub_resource type="VisualShaderNodeScalarInterp" id=21]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5, 2, -1.0 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=22]
uniform_name = "Contrast_Of_Noise"

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarOp" id=24]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarClamp" id=26]

[sub_resource type="VisualShaderNodeVectorOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=28]
uniform_name = "Noise_UV_Tiling"

[sub_resource type="VisualShaderNodeScalarOp" id=29]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarClamp" id=30]

[sub_resource type="VisualShaderNodeScalarClamp" id=31]

[sub_resource type="VisualShaderNodeScalarOp" id=39]
default_input_values = [ 0, 0.0, 1, 0.6 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=40]
uniform_name = "ScalarUniform"

[sub_resource type="VisualShaderNodeTransformVecMult" id=32]
operator = 2

[sub_resource type="VisualShaderNodeDotProduct" id=33]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=34]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=35]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=36]

[sub_resource type="VisualShaderNodeTexture" id=37]
texture = ExtResource( 3 )
texture_type = 2

[sub_resource type="VisualShader" id=38]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_7;
uniform float ScalarUniform;
uniform sampler2D tex_frg_9 : hint_normal;
uniform float Brightness_Of_Normal;
uniform float Contrast_Of_Normal;
uniform float Noise_UV_Tiling;
uniform sampler2D tex_frg_24;
uniform float Brightness_Of_Noise;
uniform float Contrast_Of_Noise;
uniform sampler2D tex_frg_10 : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// Texture:6
	vec4 tex_frg_6_read = texture(tex_frg_6, UV.xy);
	vec3 n_out6p0 = tex_frg_6_read.rgb;
	float n_out6p1 = tex_frg_6_read.a;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarUniform:39
	float n_out39p0 = ScalarUniform;

// ScalarOp:38
	float n_out38p0 = dot(n_out7p0, vec3(0.333333, 0.333333, 0.333333)) * n_out39p0;

// Input:2
	mat4 n_out2p0 = CAMERA_MATRIX;

// Input:3
	vec3 n_out3p0 = NORMAL;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 0.0)).xyz;

// DotProduct:5
	vec3 n_in5p1 = vec3(0.00000, 1.00000, 0.00000);
	float n_out5p0 = dot(n_out4p0, n_in5p1);

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// ScalarOp:17
	float n_in17p1 = 2.00000;
	float n_out17p0 = dot(n_out9p0, vec3(0.333333, 0.333333, 0.333333)) * n_in17p1;

// ScalarClamp:23
	float n_in23p1 = 0.00000;
	float n_in23p2 = 1.00000;
	float n_out23p0 = clamp(n_out17p0, n_in23p1, n_in23p2);

// ScalarUniform:14
	float n_out14p0 = Brightness_Of_Normal;

// ScalarMix:13
	float n_in13p1 = 0.00000;
	float n_out13p0 = mix(n_out23p0, n_in13p1, n_out14p0);

// ScalarUniform:16
	float n_out16p0 = Contrast_Of_Normal;

// ScalarMix:15
	float n_in15p1 = 0.50000;
	float n_out15p0 = mix(n_out13p0, n_in15p1, n_out16p0);

// ScalarOp:12
	float n_out12p0 = n_out5p0 * n_out15p0;

// Input:31
	vec3 n_out31p0 = vec3(UV, 0.0);

// ScalarUniform:34
	float n_out34p0 = Noise_UV_Tiling;

// VectorOp:33
	vec3 n_out33p0 = n_out31p0 * vec3(n_out34p0);

// Texture:24
	vec4 tex_frg_24_read = texture(tex_frg_24, n_out33p0.xy);
	vec3 n_out24p0 = tex_frg_24_read.rgb;
	float n_out24p1 = tex_frg_24_read.a;

// ScalarUniform:27
	float n_out27p0 = Brightness_Of_Noise;

// ScalarMix:26
	float n_in26p1 = 0.00000;
	float n_out26p0 = mix(dot(n_out24p0, vec3(0.333333, 0.333333, 0.333333)), n_in26p1, n_out27p0);

// ScalarUniform:29
	float n_out29p0 = Contrast_Of_Noise;

// ScalarMix:28
	float n_in28p1 = 0.50000;
	float n_out28p0 = mix(n_out26p0, n_in28p1, n_out29p0);

// ScalarClamp:36
	float n_in36p1 = 0.00000;
	float n_in36p2 = 1.00000;
	float n_out36p0 = clamp(n_out28p0, n_in36p1, n_in36p2);

// ScalarOp:30
	float n_out30p0 = n_out12p0 * n_out36p0;

// ScalarOp:35
	float n_in35p1 = 0.05000;
	float n_out35p0 = n_out30p0 / n_in35p1;

// ScalarClamp:32
	float n_in32p1 = 0.00000;
	float n_in32p2 = 1.00000;
	float n_out32p0 = clamp(n_out35p0, n_in32p1, n_in32p2);

// VectorScalarMix:8
	vec3 n_out8p0 = mix(n_out6p0, vec3(n_out38p0), n_out32p0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, UV.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// VectorScalarMix:11
	vec3 n_out11p0 = mix(n_out9p0, n_out10p0, n_out32p0);

// ScalarClamp:37
	float n_in37p1 = 0.00000;
	float n_in37p2 = 1.00000;
	float n_out37p0 = clamp(dot(n_out11p0, vec3(0.333333, 0.333333, 0.333333)), n_in37p1, n_in37p2);

// Output:0
	ALBEDO = n_out8p0;
	NORMALMAP = vec3(n_out37p0);

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -478.872, -369.736 )
nodes/fragment/0/position = Vector2( 1760, 320 )
nodes/fragment/2/node = SubResource( 11 )
nodes/fragment/2/position = Vector2( -1220, 200 )
nodes/fragment/3/node = SubResource( 23 )
nodes/fragment/3/position = Vector2( -1260, 340 )
nodes/fragment/4/node = SubResource( 32 )
nodes/fragment/4/position = Vector2( -880, 200 )
nodes/fragment/5/node = SubResource( 33 )
nodes/fragment/5/position = Vector2( -500, 160 )
nodes/fragment/6/node = SubResource( 34 )
nodes/fragment/6/position = Vector2( 220, -480 )
nodes/fragment/7/node = SubResource( 35 )
nodes/fragment/7/position = Vector2( -180, -300 )
nodes/fragment/8/node = SubResource( 36 )
nodes/fragment/8/position = Vector2( 1160, 100 )
nodes/fragment/9/node = SubResource( 37 )
nodes/fragment/9/position = Vector2( -2760, 1000 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 100, 1460 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 1020, 1080 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 480, 180 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -80, 260 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -320, 480 )
nodes/fragment/15/node = SubResource( 6 )
nodes/fragment/15/position = Vector2( 200, 340 )
nodes/fragment/16/node = SubResource( 7 )
nodes/fragment/16/position = Vector2( -40, 560 )
nodes/fragment/17/node = SubResource( 8 )
nodes/fragment/17/position = Vector2( -2060, 660 )
nodes/fragment/18/node = SubResource( 9 )
nodes/fragment/18/position = Vector2( -1680, 560 )
nodes/fragment/19/node = SubResource( 10 )
nodes/fragment/19/position = Vector2( -1420, 540 )
nodes/fragment/20/node = SubResource( 12 )
nodes/fragment/20/position = Vector2( -1100, 520 )
nodes/fragment/21/node = SubResource( 13 )
nodes/fragment/21/position = Vector2( -780, 400 )
nodes/fragment/22/node = SubResource( 14 )
nodes/fragment/22/position = Vector2( -540, 320 )
nodes/fragment/23/node = SubResource( 15 )
nodes/fragment/23/position = Vector2( -300, 320 )
nodes/fragment/24/node = SubResource( 18 )
nodes/fragment/24/position = Vector2( -600, 720 )
nodes/fragment/26/node = SubResource( 19 )
nodes/fragment/26/position = Vector2( 120, 700 )
nodes/fragment/27/node = SubResource( 20 )
nodes/fragment/27/position = Vector2( -200, 1000 )
nodes/fragment/28/node = SubResource( 21 )
nodes/fragment/28/position = Vector2( 400, 720 )
nodes/fragment/29/node = SubResource( 22 )
nodes/fragment/29/position = Vector2( 180, 1020 )
nodes/fragment/30/node = SubResource( 24 )
nodes/fragment/30/position = Vector2( 800, 400 )
nodes/fragment/31/node = SubResource( 25 )
nodes/fragment/31/position = Vector2( -1120, 760 )
nodes/fragment/32/node = SubResource( 26 )
nodes/fragment/32/position = Vector2( 902.121, 761.271 )
nodes/fragment/33/node = SubResource( 27 )
nodes/fragment/33/position = Vector2( -900, 760 )
nodes/fragment/34/node = SubResource( 28 )
nodes/fragment/34/position = Vector2( -1160, 860 )
nodes/fragment/35/node = SubResource( 29 )
nodes/fragment/35/position = Vector2( 840, 580 )
nodes/fragment/36/node = SubResource( 30 )
nodes/fragment/36/position = Vector2( 580, 540 )
nodes/fragment/37/node = SubResource( 31 )
nodes/fragment/37/position = Vector2( 1320, 800 )
nodes/fragment/38/node = SubResource( 39 )
nodes/fragment/38/position = Vector2( 611.041, -14.6614 )
nodes/fragment/39/node = SubResource( 40 )
nodes/fragment/39/position = Vector2( 360, 100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 5, 0, 6, 0, 8, 0, 8, 0, 0, 0, 9, 0, 11, 0, 10, 0, 11, 1, 5, 0, 12, 0, 14, 0, 13, 2, 16, 0, 15, 2, 13, 0, 15, 0, 15, 0, 12, 1, 9, 0, 17, 0, 17, 0, 18, 0, 18, 0, 19, 0, 19, 1, 20, 1, 19, 0, 20, 0, 20, 0, 21, 0, 20, 0, 21, 1, 23, 0, 13, 0, 27, 0, 26, 2, 29, 0, 28, 2, 26, 0, 28, 0, 24, 0, 26, 0, 12, 0, 30, 0, 32, 0, 11, 2, 31, 0, 33, 0, 33, 0, 24, 0, 34, 0, 33, 1, 30, 0, 35, 0, 35, 0, 32, 0, 28, 0, 36, 0, 36, 0, 30, 1, 11, 0, 37, 0, 37, 0, 0, 8, 32, 0, 8, 2, 7, 0, 38, 0, 38, 0, 8, 1, 17, 0, 22, 0, 17, 0, 23, 0, 39, 0, 38, 1 )

[resource]
shader = SubResource( 38 )
shader_param/ScalarUniform = 1.0
shader_param/Brightness_Of_Normal = -0.13
shader_param/Contrast_Of_Normal = 1.717
shader_param/Noise_UV_Tiling = 1.846
shader_param/Brightness_Of_Noise = 0.02
shader_param/Contrast_Of_Noise = 2.335
