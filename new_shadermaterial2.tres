[gd_resource type="ShaderMaterial" load_steps=52 format=2]

[ext_resource path="res://Textures/Snow/Snow003_2K_NormalDX.jpg" type="Texture" id=1]
[ext_resource path="res://Textures/Snow/Snow003_2K_Color.jpg" type="Texture" id=2]
[ext_resource path="res://Textures/Rock/Rock030_1K_NormalGL.jpg" type="Texture" id=3]
[ext_resource path="res://Textures/Rock/Rock030_1K_Color.jpg" type="Texture" id=4]
[ext_resource path="res://Textures/Rock/Rock030_1K_Roughness.jpg" type="Texture" id=5]
[ext_resource path="res://Textures/Snow/Snow003_2K_Roughness.jpg" type="Texture" id=6]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )
texture_type = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=2]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorClamp" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=13]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarInterp" id=14]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=15]
uniform_name = "Brightness_of_normal_mix"

[sub_resource type="VisualShaderNodeScalarInterp" id=16]
default_input_values = [ 0, 0.0, 1, 0.5, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=17]
uniform_name = "Contrast_of_normal_mix2"

[sub_resource type="VisualShaderNodeScalarOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=4]
input_name = "camera"

[sub_resource type="OpenSimplexNoise" id=19]

[sub_resource type="NoiseTexture" id=20]
seamless = true
noise = SubResource( 19 )

[sub_resource type="VisualShaderNodeTexture" id=21]
texture = SubResource( 20 )

[sub_resource type="VisualShaderNodeScalarInterp" id=22]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=23]
uniform_name = "Brightness_of_noise"

[sub_resource type="VisualShaderNodeScalarInterp" id=24]
default_input_values = [ 0, 0.0, 1, 0.5, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=25]
uniform_name = "Contrast_of_Noise"

[sub_resource type="VisualShaderNodeScalarOp" id=26]
operator = 2

[sub_resource type="VisualShaderNodeScalarClamp" id=27]

[sub_resource type="VisualShaderNodeInput" id=28]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=29]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarUniform" id=30]
uniform_name = "Noise_UV"

[sub_resource type="VisualShaderNodeScalarOp" id=31]
default_input_values = [ 0, 0.0, 1, 0.05 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarClamp" id=32]

[sub_resource type="VisualShaderNodeScalarClamp" id=33]

[sub_resource type="VisualShaderNodeScalarSmoothStep" id=34]

[sub_resource type="VisualShaderNodeScalarUniform" id=35]
uniform_name = "Snow_Blend_1"

[sub_resource type="VisualShaderNodeScalarUniform" id=36]
uniform_name = "Snow_Blend_2"

[sub_resource type="VisualShaderNodeTextureUniform" id=37]
uniform_name = "Base_Texture_Color"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=38]
uniform_name = "Base_Texture_Normal"
texture_type = 1

[sub_resource type="VisualShaderNodeTextureUniform" id=39]
uniform_name = "Base_Texture_Roughness"
texture_type = 1

[sub_resource type="VisualShaderNodeTransformVecMult" id=6]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=40]

[sub_resource type="VisualShaderNodeTexture" id=41]
texture = ExtResource( 6 )

[sub_resource type="VisualShaderNodeScalarInterp" id=42]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.5 ]

[sub_resource type="VisualShaderNodeScalarUniform" id=43]
uniform_name = "Roughness_Amount"

[sub_resource type="VisualShaderNodeInput" id=44]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=45]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=46]
uniform_name = "Base_Texutre_UV"

[sub_resource type="VisualShaderNodeDotProduct" id=7]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 4 )

[sub_resource type="VisualShaderNodeTexture" id=9]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=10]

[sub_resource type="VisualShader" id=12]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Base_Texutre_UV;
uniform sampler2D Base_Texture_Color : hint_albedo;
uniform sampler2D tex_frg_7;
uniform float Snow_Blend_1;
uniform float Snow_Blend_2;
uniform sampler2D Base_Texture_Normal : hint_albedo;
uniform float Brightness_of_normal_mix;
uniform float Contrast_of_normal_mix2;
uniform float Noise_UV;
uniform sampler2D tex_frg_20;
uniform float Brightness_of_noise;
uniform float Contrast_of_Noise;
uniform sampler2D Base_Texture_Roughness : hint_albedo;
uniform float Roughness_Amount;
uniform sampler2D tex_frg_41;
uniform sampler2D tex_frg_10 : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// Input:44
	vec3 n_out44p0 = vec3(UV, 0.0);

// ScalarUniform:46
	float n_out46p0 = Base_Texutre_UV;

// VectorOp:45
	vec3 n_out45p0 = n_out44p0 * vec3(n_out46p0);

// TextureUniform:37
	vec3 n_out37p0;
	float n_out37p1;
	{
		vec4 n_tex_read = texture(Base_Texture_Color, n_out45p0.xy);
		n_out37p0 = n_tex_read.rgb;
		n_out37p1 = n_tex_read.a;
	}

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// ScalarUniform:35
	float n_out35p0 = Snow_Blend_1;

// ScalarUniform:36
	float n_out36p0 = Snow_Blend_2;

// Input:2
	mat4 n_out2p0 = CAMERA_MATRIX;

// Input:3
	vec3 n_out3p0 = NORMAL;

// TransformVectorMult:4
	vec3 n_out4p0 = (n_out2p0 * vec4(n_out3p0, 0.0)).xyz;

// DotProduct:5
	vec3 n_in5p1 = vec3(0.00000, 1.00000, 0.00000);
	float n_out5p0 = dot(n_out4p0, n_in5p1);

// ScalarSmoothStep:34
	float n_out34p0 = smoothstep(n_out35p0, n_out36p0, n_out5p0);

// TextureUniform:38
	vec3 n_out38p0;
	float n_out38p1;
	{
		vec4 n_tex_read = texture(Base_Texture_Normal, n_out45p0.xy);
		n_out38p0 = n_tex_read.rgb;
		n_out38p1 = n_tex_read.a;
	}

// ScalarOp:14
	float n_in14p1 = 2.00000;
	float n_out14p0 = dot(n_out38p0, vec3(0.333333, 0.333333, 0.333333)) * n_in14p1;

// ScalarClamp:32
	float n_in32p1 = 0.00000;
	float n_in32p2 = 1.00000;
	float n_out32p0 = clamp(n_out14p0, n_in32p1, n_in32p2);

// ScalarUniform:16
	float n_out16p0 = Brightness_of_normal_mix;

// ScalarMix:15
	float n_in15p1 = 0.00000;
	float n_out15p0 = mix(n_out32p0, n_in15p1, n_out16p0);

// ScalarUniform:18
	float n_out18p0 = Contrast_of_normal_mix2;

// ScalarMix:17
	float n_in17p1 = 0.50000;
	float n_out17p0 = mix(n_out15p0, n_in17p1, n_out18p0);

// ScalarOp:19
	float n_out19p0 = n_out34p0 * n_out17p0;

// Input:28
	vec3 n_out28p0 = vec3(UV, 0.0);

// ScalarUniform:30
	float n_out30p0 = Noise_UV;

// VectorOp:29
	vec3 n_out29p0 = n_out28p0 * vec3(n_out30p0);

// Texture:20
	vec4 tex_frg_20_read = texture(tex_frg_20, n_out29p0.xy);
	vec3 n_out20p0 = tex_frg_20_read.rgb;
	float n_out20p1 = tex_frg_20_read.a;

// ScalarUniform:22
	float n_out22p0 = Brightness_of_noise;

// ScalarMix:21
	float n_in21p1 = 0.00000;
	float n_out21p0 = mix(dot(n_out20p0, vec3(0.333333, 0.333333, 0.333333)), n_in21p1, n_out22p0);

// ScalarUniform:24
	float n_out24p0 = Contrast_of_Noise;

// ScalarMix:23
	float n_in23p1 = 0.50000;
	float n_out23p0 = mix(n_out21p0, n_in23p1, n_out24p0);

// ScalarClamp:26
	float n_in26p1 = 0.00000;
	float n_in26p2 = 1.00000;
	float n_out26p0 = clamp(n_out23p0, n_in26p1, n_in26p2);

// ScalarOp:25
	float n_out25p0 = n_out19p0 * n_out26p0;

// ScalarOp:31
	float n_in31p1 = 0.05000;
	float n_out31p0 = n_out25p0 / n_in31p1;

// ScalarClamp:33
	float n_in33p1 = 0.00000;
	float n_in33p2 = 1.00000;
	float n_out33p0 = clamp(n_out31p0, n_in33p1, n_in33p2);

// VectorScalarMix:8
	vec3 n_out8p0 = mix(n_out37p0, n_out7p0, n_out33p0);

// TextureUniform:39
	vec3 n_out39p0;
	float n_out39p1;
	{
		vec4 n_tex_read = texture(Base_Texture_Roughness, n_out45p0.xy);
		n_out39p0 = n_tex_read.rgb;
		n_out39p1 = n_tex_read.a;
	}

// ScalarUniform:43
	float n_out43p0 = Roughness_Amount;

// ScalarMix:42
	float n_in42p1 = 0.00000;
	float n_out42p0 = mix(dot(n_out39p0, vec3(0.333333, 0.333333, 0.333333)), n_in42p1, n_out43p0);

// Texture:41
	vec4 tex_frg_41_read = texture(tex_frg_41, UV.xy);
	vec3 n_out41p0 = tex_frg_41_read.rgb;
	float n_out41p1 = tex_frg_41_read.a;

// VectorScalarMix:40
	vec3 n_out40p0 = mix(vec3(n_out42p0), n_out41p0, n_out33p0);

// Texture:10
	vec4 tex_frg_10_read = texture(tex_frg_10, UV.xy);
	vec3 n_out10p0 = tex_frg_10_read.rgb;
	float n_out10p1 = tex_frg_10_read.a;

// VectorScalarMix:11
	vec3 n_out11p0 = mix(n_out38p0, n_out10p0, n_out33p0);

// VectorClamp:13
	vec3 n_in13p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in13p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out13p0 = clamp(n_out11p0, n_in13p1, n_in13p2);

// Output:0
	ALBEDO = n_out8p0;
	ROUGHNESS = dot(n_out40p0, vec3(0.333333, 0.333333, 0.333333));
	NORMALMAP = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -847.668, 37.0285 )
nodes/fragment/0/position = Vector2( 840, 180 )
nodes/fragment/2/node = SubResource( 4 )
nodes/fragment/2/position = Vector2( -1240, 160 )
nodes/fragment/3/node = SubResource( 5 )
nodes/fragment/3/position = Vector2( -1260, 300 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -820, 160 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( -520, 180 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( -800, -180 )
nodes/fragment/7/node = SubResource( 9 )
nodes/fragment/7/position = Vector2( -460, -440 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 20, -60 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( -2080, 1320 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( -220, 1080 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 80, 1040 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( -1800, 240 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( -1300, 420 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( -1480, 560 )
nodes/fragment/17/node = SubResource( 16 )
nodes/fragment/17/position = Vector2( -1040, 540 )
nodes/fragment/18/node = SubResource( 17 )
nodes/fragment/18/position = Vector2( -1260, 620 )
nodes/fragment/19/node = SubResource( 18 )
nodes/fragment/19/position = Vector2( -380, 540 )
nodes/fragment/20/node = SubResource( 21 )
nodes/fragment/20/position = Vector2( -1540, 700 )
nodes/fragment/21/node = SubResource( 22 )
nodes/fragment/21/position = Vector2( -1240, 780 )
nodes/fragment/22/node = SubResource( 23 )
nodes/fragment/22/position = Vector2( -1460, 1060 )
nodes/fragment/23/node = SubResource( 24 )
nodes/fragment/23/position = Vector2( -920, 880 )
nodes/fragment/24/node = SubResource( 25 )
nodes/fragment/24/position = Vector2( -1200, 1000 )
nodes/fragment/25/node = SubResource( 26 )
nodes/fragment/25/position = Vector2( -300, 720 )
nodes/fragment/26/node = SubResource( 27 )
nodes/fragment/26/position = Vector2( -538.073, 866.342 )
nodes/fragment/28/node = SubResource( 28 )
nodes/fragment/28/position = Vector2( -1940, 780 )
nodes/fragment/29/node = SubResource( 29 )
nodes/fragment/29/position = Vector2( -1812.47, 909.542 )
nodes/fragment/30/node = SubResource( 30 )
nodes/fragment/30/position = Vector2( -2020, 1020 )
nodes/fragment/31/node = SubResource( 31 )
nodes/fragment/31/position = Vector2( -220, 860 )
nodes/fragment/32/node = SubResource( 32 )
nodes/fragment/32/position = Vector2( -1540, 300 )
nodes/fragment/33/node = SubResource( 33 )
nodes/fragment/33/position = Vector2( 40, 880 )
nodes/fragment/34/node = SubResource( 34 )
nodes/fragment/34/position = Vector2( -364.958, 350.389 )
nodes/fragment/35/node = SubResource( 35 )
nodes/fragment/35/position = Vector2( -740, 340 )
nodes/fragment/36/node = SubResource( 36 )
nodes/fragment/36/position = Vector2( -720, 440 )
nodes/fragment/37/node = SubResource( 37 )
nodes/fragment/37/position = Vector2( -323.958, -52.111 )
nodes/fragment/38/node = SubResource( 38 )
nodes/fragment/38/position = Vector2( -2480, 1080 )
nodes/fragment/39/node = SubResource( 39 )
nodes/fragment/39/position = Vector2( -140, 160 )
nodes/fragment/40/node = SubResource( 40 )
nodes/fragment/40/position = Vector2( 500, 240 )
nodes/fragment/41/node = SubResource( 41 )
nodes/fragment/41/position = Vector2( -160, 440 )
nodes/fragment/42/node = SubResource( 42 )
nodes/fragment/42/position = Vector2( 200, 120 )
nodes/fragment/43/node = SubResource( 43 )
nodes/fragment/43/position = Vector2( -80, 720 )
nodes/fragment/44/node = SubResource( 44 )
nodes/fragment/44/position = Vector2( -2980, 1020 )
nodes/fragment/45/node = SubResource( 45 )
nodes/fragment/45/position = Vector2( -2760, 960 )
nodes/fragment/46/node = SubResource( 46 )
nodes/fragment/46/position = Vector2( -2980, 1220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 3, 0, 4, 1, 4, 0, 5, 0, 7, 0, 8, 1, 8, 0, 0, 0, 10, 0, 11, 1, 11, 0, 13, 0, 13, 0, 0, 8, 16, 0, 15, 2, 18, 0, 17, 2, 15, 0, 17, 0, 22, 0, 21, 2, 24, 0, 23, 2, 21, 0, 23, 0, 20, 0, 21, 0, 19, 0, 25, 0, 23, 0, 26, 0, 26, 0, 25, 1, 28, 0, 29, 0, 29, 0, 20, 0, 30, 0, 29, 1, 25, 0, 31, 0, 14, 0, 32, 0, 32, 0, 15, 0, 31, 0, 33, 0, 33, 0, 11, 2, 33, 0, 8, 2, 17, 0, 19, 1, 5, 0, 34, 2, 34, 0, 19, 0, 35, 0, 34, 0, 36, 0, 34, 1, 37, 0, 8, 0, 38, 0, 14, 0, 38, 0, 11, 0, 40, 0, 0, 3, 33, 0, 40, 2, 43, 0, 42, 2, 41, 0, 40, 1, 39, 0, 42, 0, 42, 0, 40, 0, 44, 0, 45, 0, 46, 0, 45, 1, 45, 0, 38, 0, 45, 0, 37, 0, 45, 0, 39, 0 )

[resource]
shader = SubResource( 12 )
shader_param/Base_Texutre_UV = 5.36
shader_param/Snow_Blend_1 = 0.127
shader_param/Snow_Blend_2 = 0.627
shader_param/Brightness_of_normal_mix = 0.634
shader_param/Contrast_of_normal_mix2 = 0.734
shader_param/Noise_UV = 7.129
shader_param/Brightness_of_noise = 2.044
shader_param/Contrast_of_Noise = 0.683
shader_param/Roughness_Amount = -0.271
shader_param/Base_Texture_Color = ExtResource( 4 )
shader_param/Base_Texture_Normal = ExtResource( 3 )
shader_param/Base_Texture_Roughness = ExtResource( 5 )
